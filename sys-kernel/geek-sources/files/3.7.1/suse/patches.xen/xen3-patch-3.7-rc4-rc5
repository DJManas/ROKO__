From: Linux Kernel Mailing List <linux-kernel@vger.kernel.org>
Subject: Linux: 3.7-rc5
Patch-mainline: 3.7-rc5

 This patch contains the differences between 3.7-rc4 and 3.7-rc5.

Automatically created from "patch-3.7-rc4-rc5" by xen-port-patches.py
Acked-by: jbeulich@suse.com

--- head.orig/drivers/xen/Makefile	2012-10-29 17:13:41.000000000 +0100
+++ head/drivers/xen/Makefile	2012-11-14 13:25:08.000000000 +0100
@@ -8,6 +8,7 @@ ifneq ($(CONFIG_ARM),y)
 obj-$(CONFIG_PARAVIRT_XEN)	+= manage.o balloon.o
 obj-$(CONFIG_HOTPLUG_CPU)	+= $(xen-hotplug-y)
 endif
+obj-$(CONFIG_X86)		+= fallback.o
 obj-$(CONFIG_PARAVIRT_XEN)	+= grant-table.o features.o events.o
 
 xen-balloon_$(CONFIG_XEN)	:= balloon/
--- head.orig/drivers/xen/core/Makefile	2012-02-17 14:35:00.000000000 +0100
+++ head/drivers/xen/core/Makefile	2012-11-14 14:29:01.000000000 +0100
@@ -2,7 +2,7 @@
 # Makefile for the linux kernel.
 #
 
-obj-y := evtchn.o gnttab.o reboot.o machine_reboot.o fallback.o
+obj-y := evtchn.o gnttab.o reboot.o machine_reboot.o
 
 obj-$(CONFIG_XEN_PRIVILEGED_GUEST) += firmware.o
 obj-$(CONFIG_PROC_FS)		+= xen_proc.o
--- head.orig/drivers/xen/fallback.c	2012-11-14 14:28:13.000000000 +0100
+++ head/drivers/xen/fallback.c	2012-11-14 13:29:46.000000000 +0100
@@ -3,7 +3,16 @@
 #include <linux/bug.h>
 #include <linux/export.h>
 #include <asm/hypervisor.h>
+#ifdef CONFIG_PARAVIRT_XEN
 #include <asm/xen/hypercall.h>
+#else
+#define xen_event_channel_op_compat HYPERVISOR_event_channel_op_compat
+#endif
+
+#if defined(CONFIG_PARAVIRT_XEN) || CONFIG_XEN_COMPAT <= 0x030002
+
+#include <xen/interface/event_channel.h>
+#include <xen/interface/physdev.h>
 
 int xen_event_channel_op_compat(int cmd, void *arg)
 {
@@ -78,3 +87,5 @@ int HYPERVISOR_physdev_op_compat(int cmd
 
 	return rc;
 }
+
+#endif /* CONFIG_XEN_COMPAT <= 0x030002 */
--- head.orig/include/xen/hvm.h	2011-02-01 15:04:27.000000000 +0100
+++ head/include/xen/hvm.h	2012-11-14 13:31:31.000000000 +0100
@@ -7,6 +7,37 @@
 #include <asm/xen/hypercall.h>
 #endif
 
+static inline const char *param_name(int op)
+{
+#define PARAM(x) [HVM_PARAM_##x] = #x
+	static const char *const names[] = {
+		PARAM(CALLBACK_IRQ),
+		PARAM(STORE_PFN),
+		PARAM(STORE_EVTCHN),
+		PARAM(PAE_ENABLED),
+		PARAM(IOREQ_PFN),
+		PARAM(BUFIOREQ_PFN),
+		PARAM(TIMER_MODE),
+		PARAM(HPET_ENABLED),
+		PARAM(IDENT_PT),
+		PARAM(DM_DOMAIN),
+		PARAM(ACPI_S_STATE),
+		PARAM(VM86_TSS),
+		PARAM(VPT_ALIGN),
+		PARAM(CONSOLE_PFN),
+		PARAM(CONSOLE_EVTCHN),
+	};
+#undef PARAM
+
+	if (op >= ARRAY_SIZE(names))
+		return "unknown";
+
+	if (!names[op])
+		return "reserved";
+
+	return names[op];
+}
+
 static inline int hvm_get_parameter(int idx, uint64_t *value)
 {
 	struct xen_hvm_param xhv;
@@ -16,7 +47,8 @@ static inline int hvm_get_parameter(int 
 	xhv.index = idx;
 	r = HYPERVISOR_hvm_op(HVMOP_get_param, &xhv);
 	if (r < 0) {
-		pr_err("Cannot get hvm parameter %d: %d!\n", idx, r);
+		pr_err("Cannot get hvm parameter %s (%d): %d!\n",
+		       param_name(idx), idx, r);
 		return r;
 	}
 	*value = xhv.value;
