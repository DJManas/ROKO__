diff -urN linux-3.7/fs/exec.c zen-ureadahead-12095/fs/exec.c
--- linux-3.7/fs/exec.c	2012-12-11 05:30:57.000000000 +0200
+++ zen-ureadahead-12095/fs/exec.c	2013-01-21 14:51:51.741624532 +0200
@@ -56,6 +56,8 @@
 #include <linux/oom.h>
 #include <linux/compat.h>
 
+#include <trace/events/fs.h>
+
 #include <asm/uaccess.h>
 #include <asm/mmu_context.h>
 #include <asm/tlb.h>
@@ -771,6 +773,8 @@
 
 	fsnotify_open(file);
 
+	trace_open_exec(name);
+
 	err = deny_write_access(file);
 	if (err)
 		goto exit;
diff -urN linux-3.7/fs/open.c zen-ureadahead-12095/fs/open.c
--- linux-3.7/fs/open.c	2012-12-11 05:30:57.000000000 +0200
+++ zen-ureadahead-12095/fs/open.c	2013-01-21 14:51:51.638625819 +0200
@@ -33,6 +33,9 @@
 
 #include "internal.h"
 
+#define CREATE_TRACE_POINTS
+#include <trace/events/fs.h>
+
 int do_truncate(struct dentry *dentry, loff_t length, unsigned int time_attrs,
 	struct file *filp)
 {
@@ -925,6 +928,7 @@
 			} else {
 				fsnotify_open(f);
 				fd_install(fd, f);
+				trace_do_sys_open(tmp, flags, mode);
 			}
 		}
 		putname(tmp);
diff -urN linux-3.7/include/linux/page-flags.h zen-ureadahead-12095/include/linux/page-flags.h
--- linux-3.7/include/linux/page-flags.h	2012-12-11 05:30:57.000000000 +0200
+++ zen-ureadahead-12095/include/linux/page-flags.h	2013-01-21 14:59:38.485789427 +0200
@@ -109,6 +109,7 @@
 #ifdef CONFIG_TRANSPARENT_HUGEPAGE
 	PG_compound_lock,
 #endif
+	PG_readaheadunused,	/* user oriented readahead as yet unused*/
 	__NR_PAGEFLAGS,
 
 	/* Filesystems */
@@ -232,6 +233,8 @@
 PAGEFLAG(Reclaim, reclaim) TESTCLEARFLAG(Reclaim, reclaim)
 PAGEFLAG(Readahead, reclaim)		/* Reminder to do async read-ahead */
 
+PAGEFLAG(ReadaheadUnused, readaheadunused)
+
 #ifdef CONFIG_HIGHMEM
 /*
  * Must use a macro here due to header dependency issues. page_zone() is not
diff -urN linux-3.7/include/trace/events/fs.h zen-ureadahead-12095/include/trace/events/fs.h
--- linux-3.7/include/trace/events/fs.h	1970-01-01 03:00:00.000000000 +0300
+++ zen-ureadahead-12095/include/trace/events/fs.h	2013-01-21 14:59:41.349753622 +0200
@@ -0,0 +1,53 @@
+#undef TRACE_SYSTEM
+#define TRACE_SYSTEM fs
+
+#if !defined(_TRACE_FS_H) || defined(TRACE_HEADER_MULTI_READ)
+#define _TRACE_FS_H
+
+#include <linux/fs.h>
+#include <linux/tracepoint.h>
+
+TRACE_EVENT(do_sys_open,
+
+	TP_PROTO(char *filename, int flags, int mode),
+
+	TP_ARGS(filename, flags, mode),
+
+	TP_STRUCT__entry(
+		__string(	filename, filename		)
+		__field(	int, flags			)
+		__field(	int, mode			)
+	),
+
+	TP_fast_assign(
+		__assign_str(filename, filename);
+		__entry->flags = flags;
+		__entry->mode = mode;
+	),
+
+	TP_printk("\"%s\" %x %o",
+		  __get_str(filename), __entry->flags, __entry->mode)
+);
+
+TRACE_EVENT(open_exec,
+
+	TP_PROTO(char *filename),
+
+	TP_ARGS(filename),
+
+	TP_STRUCT__entry(
+		__string(	filename, filename		)
+	),
+
+	TP_fast_assign(
+		__assign_str(filename, filename);
+	),
+
+	TP_printk("\"%s\"",
+		  __get_str(filename))
+);
+
+#endif /* _TRACE_FS_H */
+
+/* This part must be outside protection */
+#include <trace/define_trace.h>
diff -urN linux-3.7/mm/filemap.c zen-ureadahead-12095/mm/filemap.c
--- linux-3.7/mm/filemap.c	2012-12-11 05:30:57.000000000 +0200
+++ zen-ureadahead-12095/mm/filemap.c	2013-01-21 14:56:35.596075863 +0200
@@ -1304,6 +1304,9 @@
 	if (size > count)
 		size = count;
 
+	if (PageReadaheadUnused(page))
+		ClearPageReadaheadUnused(page);
+
 	/*
 	 * Faults on the destination of a read are common, so do it before
 	 * taking the kmap.
diff -urN linux-3.7/mm/memory.c zen-ureadahead-12095/mm/memory.c
--- linux-3.7/mm/memory.c	2012-12-11 05:30:57.000000000 +0200
+++ zen-ureadahead-12095/mm/memory.c	2013-01-21 14:56:35.569076200 +0200
@@ -3263,10 +3263,15 @@
 	else
 		VM_BUG_ON(!PageLocked(vmf.page));
 
+	page = vmf.page;
+
+	/* Mark the page as used on fault. */
+	if (PageReadaheadUnused(page))
+		ClearPageReadaheadUnused(page);
+
 	/*
 	 * Should we do an early C-O-W break?
 	 */
-	page = vmf.page;
 	if (flags & FAULT_FLAG_WRITE) {
 		if (!(vma->vm_flags & VM_SHARED)) {
 			page = cow_page;
diff -urN linux-3.7/mm/mincore.c zen-ureadahead-12095/mm/mincore.c
--- linux-3.7/mm/mincore.c	2012-12-11 05:30:57.000000000 +0200
+++ zen-ureadahead-12095/mm/mincore.c	2013-01-21 14:56:35.621075550 +0200
@@ -80,6 +80,8 @@
 #endif
 	if (page) {
 		present = PageUptodate(page);
+		if (present)
+			present |= (PageReadaheadUnused(page) << 7);
 		page_cache_release(page);
 	}
 
diff -urN linux-3.7/mm/page_alloc.c zen-ureadahead-12095/mm/page_alloc.c
--- linux-3.7/mm/page_alloc.c	2012-12-11 05:30:57.000000000 +0200
+++ zen-ureadahead-12095/mm/page_alloc.c	2013-01-21 14:56:35.791073425 +0200
@@ -6057,6 +6057,7 @@
 #ifdef CONFIG_TRANSPARENT_HUGEPAGE
 	{1UL << PG_compound_lock,	"compound_lock"	},
 #endif
+	{1UL << PG_readaheadunused,	"readaheadunused"},
 };
 
 static void dump_page_flags(unsigned long flags)
diff -urN linux-3.7/mm/readahead.c zen-ureadahead-12095/mm/readahead.c
--- linux-3.7/mm/readahead.c	2012-12-11 05:30:57.000000000 +0200
+++ zen-ureadahead-12095/mm/readahead.c	2013-01-21 14:56:35.444077763 +0200
@@ -189,6 +189,7 @@
 		list_add(&page->lru, &page_pool);
 		if (page_idx == nr_to_read - lookahead_size)
 			SetPageReadahead(page);
+		SetPageReadaheadUnused(page);
 		ret++;
 	}
 
