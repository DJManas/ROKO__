diff -urN vmnet-orig/compat_netdevice.h vmnet-only/compat_netdevice.h
--- vmnet-orig/compat_netdevice.h	2011-11-14 07:13:15.000000000 +0100
+++ vmnet-only/compat_netdevice.h	2011-11-20 23:28:23.000000000 +0100
@@ -47,6 +47,19 @@
 #   define net_device device
 #endif
 
+/* it looks like these have been removed from the kernel 3.1
+ * probably because the "transition" is considered complete.
+ * so to keep this source compatible we just redefine them like they were
+ * previously
+ */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 1, 0)
+#define HAVE_ALLOC_NETDEV		/* feature macro: alloc_xxxdev
+					   functions are available. */
+#define HAVE_FREE_NETDEV		/* free_netdev() */
+#define HAVE_NETDEV_PRIV		/* netdev_priv() */
+#define HAVE_NETIF_QUEUE
+#define HAVE_NET_DEVICE_OPS
+#endif
 
 /*
  * SET_MODULE_OWNER appeared sometime during 2.3.x. It was setting
diff -urN vmnet-orig/filter.c vmnet-only/filter.c
--- vmnet-orig/filter.c	2011-11-14 07:13:15.000000000 +0100
+++ vmnet-only/filter.c	2011-11-20 23:28:23.000000000 +0100
@@ -26,6 +26,7 @@
 #include "compat_skbuff.h"
 #include <linux/mutex.h>
 #include <linux/netdevice.h>
+#include <linux/module.h>
 /*
  * All this makes sense only if NETFILTER support is configured in our kernel.
  */
diff -urN vmnet-orig/kmap_skb.h vmnet-only/kmap_skb.h
--- vmnet-orig/kmap_skb.h	1970-01-01 01:00:00.000000000 +0100
+++ vmnet-only/kmap_skb.h	2011-11-20 23:28:23.000000000 +0100
@@ -0,0 +1,20 @@
+#include <linux/highmem.h>
+
+static inline void *kmap_skb_frag(const skb_frag_t *frag)
+{
+#ifdef CONFIG_HIGHMEM
+        BUG_ON(in_irq());
+
+        local_bh_disable();
+#endif
+        return kmap_atomic(skb_frag_page(frag), KM_SKB_DATA_SOFTIRQ);
+}
+
+static inline void kunmap_skb_frag(void *vaddr)
+{
+        kunmap_atomic(vaddr, KM_SKB_DATA_SOFTIRQ);
+#ifdef CONFIG_HIGHMEM
+        local_bh_enable();
+#endif
+}
+
diff -urN vmnet-orig/netif.c vmnet-only/netif.c
--- vmnet-orig/netif.c	2011-11-14 07:13:15.000000000 +0100
+++ vmnet-only/netif.c	2011-11-20 23:28:23.000000000 +0100
@@ -43,6 +43,7 @@
 #include "compat_netdevice.h"
 #include "vmnetInt.h"
 
+#include <linux/netdevice.h>
 
 typedef struct VNetNetIF {
    VNetPort                port;
@@ -131,7 +132,7 @@
       .ndo_stop = VNetNetifClose,
       .ndo_get_stats = VNetNetifGetStats,
       .ndo_set_mac_address = VNetNetifSetMAC,
-      .ndo_set_multicast_list = VNetNetifSetMulticast,
+      .ndo_set_rx_mode = VNetNetifSetMulticast,
       /*
        * We cannot stuck... If someone will report problems under
        * low memory conditions or some such, we should enable it.
diff -urN vmnet-orig/userif.c vmnet-only/userif.c
--- vmnet-orig/userif.c	2011-11-14 07:13:15.000000000 +0100
+++ vmnet-only/userif.c	2011-11-20 23:28:23.000000000 +0100
@@ -20,7 +20,9 @@
 
 #define EXPORT_SYMTAB
 
+#ifndef __KERNEL_SYSCALLS__
 #define __KERNEL_SYSCALLS__
+#endif
 
 #include <linux/file.h>
 #include <linux/highmem.h>
@@ -49,6 +51,8 @@
 #include "vm_assert.h"
 #include "monitorAction_exported.h"
 
+#include "kmap_skb.h"
+
 typedef struct VNetUserIFStats {
    unsigned    read;
    unsigned    written;
@@ -515,12 +519,12 @@
 	frag++) {
       if (frag->size > 0) {
 	 unsigned int tmpCsum;
-	 const void *vaddr;
+	 void *vaddr;
 
-	 vaddr = kmap(frag->page);
+	 vaddr = kmap_skb_frag(frag);
 	 tmpCsum = csum_and_copy_to_user(vaddr + frag->page_offset,
 					 curr, frag->size, 0, &err);
-	 kunmap(frag->page);
+	 kunmap_skb_frag(vaddr);
 	 if (err) {
 	    return err;
 	 }
