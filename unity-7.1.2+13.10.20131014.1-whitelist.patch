diff -ru unity-7.1.2+13.10.20131014.1.orig/com.canonical.Unity.gschema.xml unity-7.1.2+13.10.20131014.1/com.canonical.Unity.gschema.xml
--- unity-7.1.2+13.10.20131014.1.orig/com.canonical.Unity.gschema.xml	2014-03-27 21:41:20.033436699 +0200
+++ unity-7.1.2+13.10.20131014.1/com.canonical.Unity.gschema.xml	2014-03-27 21:39:18.648433215 +0200
@@ -59,6 +59,13 @@
       <description>This is a detection key for the favorite migration script to know whether the needed migration is done or not.</description>
     </key>
   </schema>
+  <schema path="/com/canonical/unity/panel/" id="com.canonical.Unity.Panel" gettext-domain="unity">
+    <key type="as" name="systray-whitelist">
+      <default>[ 'JavaEmbeddedFrame', 'Wine', 'Update-notifier' ]</default>
+      <summary>List of client names, resource classes or wm classes to allow in the Panel's systray implementation.</summary>
+      <description>"" (empty) will not allow any tray icons, "all" will allow all tray icons, otherwise there will be an attempt to match each icon to a value here.</description>
+    </key>
+  </schema>
   <schema path="/com/canonical/unity/devices/" id="com.canonical.Unity.Devices" gettext-domain="unity">
     <key type="as" name="blacklist">
         <default>[]</default>
Только в unity-7.1.2+13.10.20131014.1: com.canonical.Unity.gschema.xml.orig
diff -ru unity-7.1.2+13.10.20131014.1.orig/panel/PanelTray.cpp unity-7.1.2+13.10.20131014.1/panel/PanelTray.cpp
--- unity-7.1.2+13.10.20131014.1.orig/panel/PanelTray.cpp	2014-03-27 21:41:20.055436700 +0200
+++ unity-7.1.2+13.10.20131014.1/panel/PanelTray.cpp	2014-03-27 21:39:45.975433999 +0200
@@ -17,7 +17,6 @@
  *              Marco Trevisan (Treviño) <3v1n0@ubuntu.com>
  */
 
-#include <array>
 
 #include "PanelTray.h"
 #include "unity-shared/PanelStyle.h"
@@ -30,7 +29,7 @@
 {
 const std::string SETTINGS_NAME = "com.canonical.Unity.Panel";
 const int PADDING = 3;
-const std::array<std::string, 2> WHITELIST {{ "JavaEmbeddedFrame", "Wine" }};
+
 }
 
 namespace unity
@@ -38,10 +37,17 @@
 
 PanelTray::PanelTray()
   : View(NUX_TRACKER_LOCATION)
+  , settings_(g_settings_new(SETTINGS_NAME.c_str()))
   , window_(gtk_window_new(GTK_WINDOW_TOPLEVEL))
+  , whitelist_(g_settings_get_strv(settings_, "systray-whitelist"))
 {
   int panel_height = panel::Style::Instance().panel_height;
 
+  whitelist_changed_.Connect(settings_, "changed::systray-whitelist", [&] (GSettings*, gchar*) {
+    g_strfreev(whitelist_);
+    whitelist_ = g_settings_get_strv(settings_, "systray-whitelist");
+  });
+
   auto gtkwindow = glib::object_cast<GtkWindow>(window_);
   gtk_window_set_type_hint(gtkwindow, GDK_WINDOW_TYPE_HINT_DOCK);
   gtk_window_set_has_resize_grip(gtkwindow, FALSE);
@@ -77,6 +83,8 @@
 
 PanelTray::~PanelTray()
 {
+  g_strfreev(whitelist_);
+
   if (gtk_widget_get_realized(window_))
   {
     // We call Release since we're deleting the window here manually,
@@ -127,13 +135,38 @@
 
 gboolean PanelTray::FilterTrayCallback(NaTray* tray, NaTrayChild* icon, PanelTray* self)
 {
+  int i = 0;
+  bool accept = false;
+  const char *name = nullptr;
+
   glib::String title(na_tray_child_get_title(icon));
 
   glib::String res_class;
   glib::String res_name;
   na_tray_child_get_wm_class(icon, &res_name, &res_class);
 
-  bool accept = FilterTray(title.Str(), res_name.Str(), res_class.Str());
+  while ((name = self->whitelist_[i]))
+  {
+    if (g_strcmp0(name, "all") == 0)
+    {
+      accept = true;
+      break;
+    }
+    else if (!name || name[0] == '\0')
+    {
+      accept = false;
+      break;
+    }
+    else if ((title && g_str_has_prefix(title, name))
+             || (res_name && g_str_has_prefix(res_name, name))
+             || (res_class && g_str_has_prefix(res_class, name)))
+    {
+      accept = true;
+      break;
+    }
+
+    i++;
+  }
 
   if (accept)
   {
@@ -152,15 +185,6 @@
   return accept ? TRUE : FALSE;
 }
 
-bool PanelTray::FilterTray(std::string const& title, std::string const& res_name, std::string const& res_class)
-{
-  for (auto const& item : WHITELIST)
-    if (title.find(item) == 0 || res_name.find(item) == 0 || res_class.find(item) == 0)
-      return true;
-
-  return false;
-}
-
 void PanelTray::OnTrayIconRemoved(NaTrayManager* manager, NaTrayChild* removed)
 {
   for (auto child : children_)
Только в unity-7.1.2+13.10.20131014.1/panel: PanelTray.cpp.orig
diff -ru unity-7.1.2+13.10.20131014.1.orig/panel/PanelTray.h unity-7.1.2+13.10.20131014.1/panel/PanelTray.h
--- unity-7.1.2+13.10.20131014.1.orig/panel/PanelTray.h	2014-03-27 21:41:20.055436700 +0200
+++ unity-7.1.2+13.10.20131014.1/panel/PanelTray.h	2014-03-27 21:39:45.976433999 +0200
@@ -46,7 +46,6 @@
   void Sync();
   Window xid();
 
-  static bool FilterTray(std::string const& title, std::string const& res_name, std::string const& res_class);
 
 protected:
   void Draw(nux::GraphicsEngine& gfx_content, bool force_draw);
@@ -61,8 +60,10 @@
 
   int WidthOfTray();
 
+  glib::Object<GSettings> settings_;
   glib::Object<GtkWidget> window_;
   glib::Object<NaTray> tray_;
+  char** whitelist_;
 
   glib::Signal<void, GSettings*, gchar*> whitelist_changed_;
   glib::Signal<gboolean, GtkWidget*, cairo_t*> draw_signal_;
Только в unity-7.1.2+13.10.20131014.1/panel: PanelTray.h.orig
diff -ru unity-7.1.2+13.10.20131014.1.orig/tests/CMakeLists.txt unity-7.1.2+13.10.20131014.1/tests/CMakeLists.txt
--- unity-7.1.2+13.10.20131014.1.orig/tests/CMakeLists.txt	2014-03-27 21:41:20.046436700 +0200
+++ unity-7.1.2+13.10.20131014.1/tests/CMakeLists.txt	2014-03-27 21:40:23.128435066 +0200
@@ -270,7 +270,6 @@
                  test_panel_menu_view.cpp
                  test_panel_service.cpp
                  test_panel_style.cpp
-                 test_panel_tray.cpp
                  test_panel_view.cpp
                  test_places_group.cpp
                  test_preview_player.cpp
Только в unity-7.1.2+13.10.20131014.1/tests: CMakeLists.txt.orig
